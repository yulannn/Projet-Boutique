import type { AirlineDefinition } from '@faker-js/faker/dist/types/definitions/airline';
import type { AnimalDefinition } from '@faker-js/faker/dist/types/definitions/animal';
import type { ColorDefinition } from '@faker-js/faker/dist/types/definitions/color';
import type { CommerceDefinition } from '@faker-js/faker/dist/types/definitions/commerce';
import type { CompanyDefinition } from '@faker-js/faker/dist/types/definitions/company';
import type { DatabaseDefinition } from '@faker-js/faker/dist/types/definitions/database';
import type { DateDefinition } from '@faker-js/faker/dist/types/definitions/date';
import type { FinanceDefinition } from '@faker-js/faker/dist/types/definitions/finance';
import type { HackerDefinition } from '@faker-js/faker/dist/types/definitions/hacker';
import type { InternetDefinition } from '@faker-js/faker/dist/types/definitions/internet';
import type { LocationDefinition } from '@faker-js/faker/dist/types/definitions/location';
import type { LoremDefinition } from '@faker-js/faker/dist/types/definitions/lorem';
import type { MetadataDefinition } from '@faker-js/faker/dist/types/definitions/metadata';
import type { MusicDefinition } from '@faker-js/faker/dist/types/definitions/music';
import type { PersonDefinition } from '@faker-js/faker/dist/types/definitions/person';
import type { PhoneNumberDefinition } from '@faker-js/faker/dist/types/definitions/phone_number';
import type { ScienceDefinition } from '@faker-js/faker/dist/types/definitions/science';
import type { SystemDefinition } from '@faker-js/faker/dist/types/definitions/system';
import type { VehicleDefinition } from '@faker-js/faker/dist/types/definitions/vehicle';
import type { WordDefinition } from '@faker-js/faker/dist/types/definitions/word';
/**
 * Wrapper type for all definition categories that will make all properties optional and allow extra properties.
 */
export type LocaleEntry<TCategoryDefinition extends Record<string, unknown>> = {
    [P in keyof TCategoryDefinition]?: TCategoryDefinition[P] | null;
} & Record<string, unknown>;
/**
 * The definitions as used by the translations/locales.
 */
export type LocaleDefinition = {
    metadata?: MetadataDefinition;
    airline?: AirlineDefinition;
    animal?: AnimalDefinition;
    color?: ColorDefinition;
    commerce?: CommerceDefinition;
    company?: CompanyDefinition;
    database?: DatabaseDefinition;
    date?: DateDefinition;
    finance?: FinanceDefinition;
    hacker?: HackerDefinition;
    internet?: InternetDefinition;
    location?: LocationDefinition;
    lorem?: LoremDefinition;
    music?: MusicDefinition;
    person?: PersonDefinition;
    phone_number?: PhoneNumberDefinition;
    science?: ScienceDefinition;
    system?: SystemDefinition;
    vehicle?: VehicleDefinition;
    word?: WordDefinition;
} & Record<string, Record<string, unknown>>;
